(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{424:function(t,e,n){t.exports=n.p+"assets/img/image-20201126144817834.ebfdf097.png"},767:function(t,e,n){"use strict";n.r(e);var a=n(28),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("可能被忽略的Golang细节——range")]),t._v(" "),a("p",[t._v("range的使用\nrange的使用非常简单，对于遍历array，*array，string它返回两个值分别是数据的索引和值，遍历map时返回的两个值分别是key和value，遍历channel时，则只有一个返回数据。各种类型的返回值参考下表：")]),t._v(" "),a("ul",[a("li",[t._v("range expression\t1st Value\t2nd Value(optional)\tnotes")]),t._v(" "),a("li",[t._v("array[n]E,*[n]E\tindexint\tvalue E[i]")]),t._v(" "),a("li",[t._v("slice[]E\tindexint\tvalue E[i]")]),t._v(" "),a("li",[t._v("string abcd\tindexint\trune int\t对于string，range迭代的是Unicode而不是字节，所以返回的值是rune")]),t._v(" "),a("li",[t._v("mapmap[k]v\tkeyk\tvalue v")]),t._v(" "),a("li",[t._v("channel\telement\tnone")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:n(424),alt:"image-20201126144817834"}}),t._v(" "),a("p",[a("a",{attrs:{href:"https://studygolang.com/articles/20049",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考链接"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);