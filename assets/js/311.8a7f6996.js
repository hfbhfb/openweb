(window.webpackJsonp=window.webpackJsonp||[]).push([[311],{960:function(v,_,n){"use strict";n.r(_);var s=n(28),e=Object(s.a)({},(function(){var v=this,_=v.$createElement,n=v._self._c||_;return n("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[n("ul",[n("li",[n("p",[v._v("RBAC  是基于角色的访问控制（Role-Based Access Control ）在 RBAC  中，权限与角色相关联，用户通过成为适当角色的成员而得到这些角色的权限。这就极大地简化了权限的管理。这样管理都是层级相互依赖的，权限赋予给角色，而把角色又赋予用户，这样的权限设计很清楚，管理起来很方便。")]),v._v(" "),n("ul",[n("li",[v._v("github : https://github.com/ciey/NodeExpressAdmin")]),v._v(" "),n("li",[v._v("项目路径:  cd /Users/hfb/projects/js/NodeExpressAdmin")])])]),v._v(" "),n("li",[n("p",[v._v("技术栈(watch工具:nodemon)   nodejs热更新")]),v._v(" "),n("ul",[n("li",[v._v("Framework: Express")]),v._v(" "),n("li",[v._v("db: mysql")]),v._v(" "),n("li",[v._v("ORM: sequelize")]),v._v(" "),n("li",[v._v("Cache: redis")]),v._v(" "),n("li",[v._v("ECMAScript: ES6")])])])]),v._v(" "),n("p",[v._v(".\n├── assets                          静态资源目录\n│   ├── css                         自定义css\n│   ├── images                      自定义图片\n│   ├── js                          自定义js\n│   └── libs                        第三方资源库\n├── common                          公共组件\n│   ├── logger.js                   日志\n│   └── xxx.js                      其他（后续增加）\n├── controller                      控制器\n│   ├── login.js                    登录控制器\n│   ├── system.js                   系统控制器\n│   ├── xxxx.js                     其他（后续增加）\n├── logs                            日志文件\n├── middleware                      中间件\n│   ├── auth.js                     权限验证"),n("br"),v._v("\n│   └── xxxx.js                     其他（后续增加）\n├── models                          模型(数据库)\n│   ├── index.js                    db配置及加载模型\n│   └── user.js                     用户模型\n├── upload                          上传文件夹\n│   └── xxxx.png"),n("br"),v._v("\n├── views                           视图\n├── app.js                          启动文件\n├── config.default.js               默认配置"),n("br"),v._v("\n├── config.js                       加载实际配置（本地）"),n("br"),v._v("\n├── dbsync.js                       数据同步"),n("br"),v._v("\n├── package.json                    配置文件\n├── README.md                       项目说明\n└── router.js                       路由表")]),v._v(" "),n("ul",[n("li",[v._v("一个bilibili rbac拉勾教育的一个实现(未找到源码:mogodb+express)")]),v._v(" "),n("li",[v._v("管理权限\n"),n("ul",[n("li",[v._v("角色管理\n"),n("ul",[n("li",[v._v("id , 昵称")]),v._v(" "),n("li",[v._v("权限")]),v._v(" "),n("li",[v._v("编辑 (可针对人进行权限编辑,个性化定制? "),n("code",[v._v("商品")]),v._v(" "),n("code",[v._v("产品添加")]),v._v(" "),n("code",[v._v("运费模板列表")]),v._v(")")])])]),v._v(" "),n("li",[v._v("管理员列表\n"),n("ul",[n("li",[v._v("姓名,帐号")]),v._v(" "),n("li",[v._v("身份  "),n("code",[v._v("这是重点")]),v._v(" ("),n("code",[v._v("财务")]),v._v(" "),n("code",[v._v("运营")]),v._v(")")]),v._v(" "),n("li",[v._v("最后登录时间 最后登录ip")]),v._v(" "),n("li",[v._v("操作")])])]),v._v(" "),n("li",[v._v("限制规则\n"),n("ul",[n("li",[v._v("id,按钮名称")]),v._v(" "),n("li",[v._v("接口路径 (接口也是权限 "),n("code",[v._v("[get] product/category")]),v._v(")")]),v._v(" "),n("li",[v._v("前端权限 "),n("code",[v._v("admin-index-index")])]),v._v(" "),n("li",[v._v("页面路由 "),n("code",[v._v("/admin/home/")])]),v._v(" "),n("li",[v._v("规则状态")])])])])])])])}),[],!1,null,null,null);_.default=e.exports}}]);