(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{799:function(e,s,a){"use strict";a.r(s);var t=a(28),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),a("p",[e._v("本文将结合实例demo，阐述30条有关于优化SQL的建议，多数是实际开发中总结出来的，希望对大家有帮助。")]),e._v(" "),a("h3",{attrs:{id:"_1、查询sql尽量不要使用select-，而是select具体字段。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、查询sql尽量不要使用select-，而是select具体字段。"}},[e._v("#")]),e._v(" 1、查询SQL尽量不要使用select *，而是select具体字段。")]),e._v(" "),a("p",[e._v("反例子：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from employee;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例子：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select id，name from employee;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("只取需要的字段，节省资源、减少网络开销。")]),e._v(" "),a("li",[e._v("select * 进行查询时，很可能就不会使用到覆盖索引了，就会造成回表查询。")])]),e._v(" "),a("h3",{attrs:{id:"_2、如果知道查询结果只有一条或者只要最大-最小一条记录，建议用limit-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、如果知道查询结果只有一条或者只要最大-最小一条记录，建议用limit-1"}},[e._v("#")]),e._v(" 2、如果知道查询结果只有一条或者只要最大/最小一条记录，建议用limit 1")]),e._v(" "),a("p",[e._v("假设现在有employee员工表，要找出一个名字叫jay的人.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE `employee` (\n  `id` int(11) NOT NULL,\n  `name` varchar(255) DEFAULT NULL,\n  `age` int(11) DEFAULT NULL,\n  `date` datetime DEFAULT NULL,\n  `sex` int(1) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select id，name from employee where name='jay'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select id，name from employee where name='jay' limit 1;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("加上limit 1后,只要找到了对应的一条记录,就不会继续向下扫描了,效率将会大大提高。")]),e._v(" "),a("li",[e._v("当然，如果name是唯一索引的话，是不必要加上limit 1了，因为limit的存在主要就是为了防止全表扫描，从而提高性能,如果一个语句本身可以预知不用全表扫描，有没有limit ，性能的差别并不大。")])]),e._v(" "),a("h3",{attrs:{id:"_3、应尽量避免在where子句中使用or来连接条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、应尽量避免在where子句中使用or来连接条件"}},[e._v("#")]),e._v(" 3、应尽量避免在where子句中使用or来连接条件")]),e._v(" "),a("p",[e._v("新建一个user表，它有一个普通索引userId，表结构如下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE `user` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `userId` int(11) NOT NULL,\n  `age` int(11) NOT NULL,\n  `name` varchar(255) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `idx_userId` (`userId`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("假设现在需要查询userid为1或者年龄为18岁的用户，很容易有以下sql")]),e._v(" "),a("p",[e._v("反例:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from user where userid=1 or age =18\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//使用union all \nselect * from user where userid=1 \nunion all \nselect * from user where age = 18\n\n//或者分开两条sql写：\nselect * from user where userid=1\nselect * from user where age = 18\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("使用or可能会使索引失效，从而全表扫描。")])]),e._v(" "),a("blockquote",[a("p",[e._v("对于or+没有索引的age这种情况，假设它走了userId的索引，但是走到age查询条件时，它还得全表扫描，也就是需要三步过程： 全表扫描+索引扫描+合并\n如果它一开始就走全表扫描，直接一遍扫描就完事。\nmysql是有优化器的，处于效率与成本考虑，遇到or条件，索引可能失效，看起来也合情合理。")])]),e._v(" "),a("h3",{attrs:{id:"_4、优化limit分页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、优化limit分页"}},[e._v("#")]),e._v(" 4、优化limit分页")]),e._v(" "),a("p",[e._v("我们日常做分页需求时，一般会用 limit 实现，但是当偏移量特别大的时候，查询效率就变得低下。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select id，name，age from employee limit 10000，10\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//方案一 ：返回上次查询的最大记录(偏移量)\nselect id，name from employee where id>10000 limit 10.\n\n//方案二：order by + 索引\nselect id，name from employee order by id  limit 10000，10\n\n//方案三：在业务允许的情况下限制页数：\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("当偏移量最大的时候，查询效率就会越低，因为Mysql并非是跳过偏移量直接去取后面的数据，而是先把偏移量+要取的条数，然后再把前面偏移量这一段的数据抛弃掉再返回的。")]),e._v(" "),a("li",[e._v("如果使用优化方案一，返回上次最大查询记录（偏移量），这样可以跳过偏移量，效率提升不少。")]),e._v(" "),a("li",[e._v("方案二使用order by+索引，也是可以提高查询效率的。")]),e._v(" "),a("li",[e._v("方案三的话，建议跟业务讨论，有没有必要查这么后的分页啦。因为绝大多数用户都不会往后翻太多页。")])]),e._v(" "),a("h3",{attrs:{id:"_5、优化你的like语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、优化你的like语句"}},[e._v("#")]),e._v(" 5、优化你的like语句")]),e._v(" "),a("p",[e._v("日常开发中，如果用到模糊关键字查询，很容易想到like，但是like很可能让你的索引失效。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select userId，name from user where userId like '%123';\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select userId，name from user where userId like '123%';\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("把%放前面，并不走索引，如下：\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/20/170f7f2739040e5b?w=1280&h=330&f=png&s=129628",alt:""}})]),e._v(" "),a("li",[e._v("把% 放关键字后面，还是会走索引的。如下：\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/20/170f7f224aa3dfed?w=1280&h=314&f=png&s=126373",alt:""}})])]),e._v(" "),a("h3",{attrs:{id:"_6、使用where条件限定要查询的数据，避免返回多余的行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、使用where条件限定要查询的数据，避免返回多余的行"}},[e._v("#")]),e._v(" 6、使用where条件限定要查询的数据，避免返回多余的行")]),e._v(" "),a("p",[e._v("假设业务场景是这样：查询某个用户是否是会员。曾经看过老的实现代码是这样。。。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('List<Long> userIds = sqlMap.queryList("select userId from user where isVip=1");\nboolean isVip = userIds.contains(userId);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Long userId = sqlMap.queryObject(\"select userId from user where userId='userId' and isVip='1' \")\nboolean isVip = userId！=null;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("需要什么数据，就去查什么数据，避免返回不必要的数据，节省开销。")])]),e._v(" "),a("h3",{attrs:{id:"_7、尽量避免在索引列上使用mysql的内置函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、尽量避免在索引列上使用mysql的内置函数"}},[e._v("#")]),e._v(" 7、尽量避免在索引列上使用mysql的内置函数")]),e._v(" "),a("p",[e._v("业务需求：查询最近七天内登陆过的用户(假设loginTime加了索引)")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select userId,loginTime from loginuser where Date_ADD(loginTime,Interval 7 DAY) >=now();\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("explain  select userId,loginTime from loginuser where  loginTime >= Date_ADD(NOW(),INTERVAL - 7 DAY);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("索引列上使用mysql的内置函数，索引失效")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fd5f19265afa9?w=1179&h=278&f=png&s=28534",alt:""}})]),e._v(" "),a("ul",[a("li",[e._v("如果索引列不加内置函数，索引还是会走的。\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/20/170f875955e8b7c0?w=1201&h=290&f=png&s=28564",alt:""}})])]),e._v(" "),a("h3",{attrs:{id:"_8、应尽量避免在-where-子句中对字段进行表达式操作，这将导致系统放弃使用索引而进行全表扫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、应尽量避免在-where-子句中对字段进行表达式操作，这将导致系统放弃使用索引而进行全表扫"}},[e._v("#")]),e._v(" 8、应尽量避免在 where 子句中对字段进行表达式操作，这将导致系统放弃使用索引而进行全表扫")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from user where age-1 =10；\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from user where age =11；\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("虽然age加了索引，但是因为对它进行运算，索引直接迷路了。。。\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/20/170f85b4a47dc153?w=1280&h=265&f=png&s=118891",alt:""}})])]),e._v(" "),a("h3",{attrs:{id:"_9、inner-join-、left-join、right-join，优先使用inner-join，如果是left-join，左边表结果尽量小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、inner-join-、left-join、right-join，优先使用inner-join，如果是left-join，左边表结果尽量小"}},[e._v("#")]),e._v(" 9、Inner join 、left join、right join，优先使用Inner join，如果是left join，左边表结果尽量小")]),e._v(" "),a("blockquote",[a("ul",[a("li",[e._v("Inner join 内连接，在两张表进行连接查询时，只保留两张表中完全匹配的结果集")]),e._v(" "),a("li",[e._v("left join 在两张表进行连接查询时，会返回左表所有的行，即使在右表中没有匹配的记录。")]),e._v(" "),a("li",[e._v("right join 在两张表进行连接查询时，会返回右表所有的行，即使在左表中没有匹配的记录。")])])]),e._v(" "),a("p",[e._v("都满足SQL需求的前提下，推荐优先使用Inner join（内连接），如果要使用left join，左边表数据结果尽量小，如果有条件的尽量放到左边处理。")]),e._v(" "),a("p",[e._v("反例:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from tab1 t1 left join tab2 t2  on t1.size = t2.size where t1.id>2;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from (select * from tab1 where id >2) t1 left join tab2 t2 on t1.size = t2.size;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("如果inner join是等值连接，或许返回的行数比较少，所以性能相对会好一点。")]),e._v(" "),a("li",[e._v("同理，使用了左连接，左边表数据结果尽量小，条件尽量放到左边处理，意味着返回的行数可能比较少。")])]),e._v(" "),a("h3",{attrs:{id:"_10、应尽量避免在-where-子句中使用-或-操作符，否则将引擎放弃使用索引而进行全表扫描。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、应尽量避免在-where-子句中使用-或-操作符，否则将引擎放弃使用索引而进行全表扫描。"}},[e._v("#")]),e._v(" 10、应尽量避免在 where 子句中使用!=或<>操作符，否则将引擎放弃使用索引而进行全表扫描。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select age,name  from user where age <>18;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//可以考虑分开两条sql写\nselect age,name  from user where age <18;\nselect age,name  from user where age >18;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("使用!=和<>很可能会让索引失效")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170f8d5a32598527?w=1124&h=275&f=png&s=23714",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_11、使用联合索引时，注意索引列的顺序，一般遵循最左匹配原则。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、使用联合索引时，注意索引列的顺序，一般遵循最左匹配原则。"}},[e._v("#")]),e._v(" 11、使用联合索引时，注意索引列的顺序，一般遵循最左匹配原则。")]),e._v(" "),a("p",[e._v("表结构：（有一个联合索引idx_userid_age，userId在前，age在后）")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE `user` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `userId` int(11) NOT NULL,\n  `age` int(11) DEFAULT NULL,\n  `name` varchar(255) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `idx_userid_age` (`userId`,`age`) USING BTREE\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from user where age = 10;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fabb3abde4936?w=1280&h=179&f=png&s=110711",alt:""}})]),e._v(" "),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//符合最左匹配原则\nselect * from user where userid=10 and age =10；\n//符合最左匹配原则\nselect * from user where userid =10;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fda546249a690?w=1318&h=289&f=png&s=26076",alt:""}}),e._v(" "),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fabd29ed198a8?w=1352&h=244&f=png&s=24752",alt:""}}),e._v("\n理由：")]),e._v(" "),a("ul",[a("li",[e._v("当我们创建一个联合索引的时候，如(k1,k2,k3)，相当于创建了（k1）、(k1,k2)和(k1,k2,k3)三个索引，这就是最左匹配原则。")]),e._v(" "),a("li",[e._v("联合索引不满足最左原则，索引一般会失效，但是这个还跟Mysql优化器有关的。")])]),e._v(" "),a("h3",{attrs:{id:"_12、对查询进行优化，应考虑在-where-及-order-by-涉及的列上建立索引，尽量避免全表扫描。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12、对查询进行优化，应考虑在-where-及-order-by-涉及的列上建立索引，尽量避免全表扫描。"}},[e._v("#")]),e._v(" 12、对查询进行优化，应考虑在 where 及 order by 涉及的列上建立索引，尽量避免全表扫描。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from user where address ='深圳' order by age ;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fac5e1650f9b4?w=1090&h=275&f=png&s=28394",alt:""}}),e._v("\n正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("添加索引\nalter table user add index idx_address_age (address,age)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170facab45b2d9a6?w=1064&h=246&f=png&s=30933",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_13、如果插入数据过多，考虑批量插入。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13、如果插入数据过多，考虑批量插入。"}},[e._v("#")]),e._v(" 13、如果插入数据过多，考虑批量插入。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("for(User u :list){\n INSERT into user(name,age) values(#name#,#age#)   \n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('//一次500批量插入，分批进行\ninsert into user(name,age) values\n<foreach collection="list" item="item" index="index" separator=",">\n    (#{item.name},#{item.age})\n</foreach>\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("批量插入性能好，更加省时间")])]),e._v(" "),a("blockquote",[a("p",[e._v("打个比喻:假如你需要搬一万块砖到楼顶,你有一个电梯,电梯一次可以放适量的砖（最多放500）,你可以选择一次运送一块砖,也可以一次运送500,你觉得哪个时间消耗大?")])]),e._v(" "),a("h3",{attrs:{id:"_14、在适当的时候，使用覆盖索引。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14、在适当的时候，使用覆盖索引。"}},[e._v("#")]),e._v(" 14、在适当的时候，使用覆盖索引。")]),e._v(" "),a("p",[e._v("覆盖索引能够使得你的SQL语句不需要回表，仅仅访问索引就能够得到所有需要的数据，大大提高了查询效率。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// like模糊查询，不走索引了\nselect * from user where userid like '%123%'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fb02be8584b0a?w=1137&h=294&f=png&s=24494",alt:""}}),e._v("\n正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//id为主键，那么为普通索引，即覆盖索引登场了。\nselect id,name from user where userid like '%123%';\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fafe4a0d3d5e6?w=1488&h=353&f=png&s=30036",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_15、慎用distinct关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15、慎用distinct关键字"}},[e._v("#")]),e._v(" 15、慎用distinct关键字")]),e._v(" "),a("p",[e._v("distinct 关键字一般用来过滤重复记录，以返回不重复的记录。在查询一个字段或者很少字段的情况下使用时，给查询带来优化效果。但是在字段很多的时候使用，却会大大降低查询效率。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT DISTINCT * from  user;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select DISTINCT name from user;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("带distinct的语句cpu时间和占用时间都高于不带distinct的语句。因为当查询很多字段时，如果使用distinct，数据库引擎就会对数据进行比较，过滤掉重复数据，然而这个比较，过滤的过程会占用系统资源，cpu时间。")])]),e._v(" "),a("h3",{attrs:{id:"_16、删除冗余和重复索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16、删除冗余和重复索引"}},[e._v("#")]),e._v(" 16、删除冗余和重复索引")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  KEY `idx_userId` (`userId`)  \n  KEY `idx_userId_age` (`userId`,`age`)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("正例:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  //删除userId索引，因为组合索引（A，B）相当于创建了（A）和（A，B）索引\n  KEY `idx_userId_age` (`userId`,`age`)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("重复的索引需要维护，并且优化器在优化查询的时候也需要逐个地进行考虑，这会影响性能的。")])]),e._v(" "),a("h3",{attrs:{id:"_17、如果数据量较大，优化你的修改-删除语句。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17、如果数据量较大，优化你的修改-删除语句。"}},[e._v("#")]),e._v(" 17、如果数据量较大，优化你的修改/删除语句。")]),e._v(" "),a("p",[e._v("避免同时修改或删除过多数据，因为会造成cpu利用率过高，从而影响别人对数据库的访问。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//一次删除10万或者100万+？\ndelete from user where id <100000;\n//或者采用单一循环操作，效率低，时间漫长\nfor（User user：list）{\n   delete from user； \n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//分批进行删除,如每次500\ndelete user where id<500\ndelete product where id>=500 and id<1000；\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("一次性删除太多数据，可能会有lock wait timeout exceed的错误，所以建议分批操作。")])]),e._v(" "),a("h3",{attrs:{id:"_18、where子句中考虑使用默认值代替null。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18、where子句中考虑使用默认值代替null。"}},[e._v("#")]),e._v(" 18、where子句中考虑使用默认值代替null。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from user where age is not null;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fbaec810f084f?w=1176&h=215&f=png&s=22551",alt:""}}),e._v("\n正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//设置0为默认值\nselect * from user where age>0;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fbb088234cc77?w=1190&h=225&f=png&s=23147",alt:""}}),e._v("\n理由：")]),e._v(" "),a("ul",[a("li",[e._v("并不是说使用了is null 或者 is not null 就会不走索引了，这个跟mysql版本以及查询成本都有关。")])]),e._v(" "),a("blockquote",[a("p",[e._v("如果mysql优化器发现，走索引比不走索引成本还要高，肯定会放弃索引，这些条件"),a("code",[e._v("！=，>is null，is not null")]),e._v("经常被认为让索引失效，其实是因为一般情况下，查询的成本高，优化器自动放弃的。")])]),e._v(" "),a("ul",[a("li",[e._v("如果把null值，换成默认值，很多时候让走索引成为可能，同时，表达意思会相对清晰一点。")])]),e._v(" "),a("h3",{attrs:{id:"_19、不要有超过5个以上的表连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19、不要有超过5个以上的表连接"}},[e._v("#")]),e._v(" 19、不要有超过5个以上的表连接")]),e._v(" "),a("ul",[a("li",[e._v("连表越多，编译的时间和开销也就越大。")]),e._v(" "),a("li",[e._v("把连接表拆开成较小的几个执行，可读性更高。")]),e._v(" "),a("li",[e._v("如果一定需要连接很多表才能得到数据，那么意味着糟糕的设计了。")])]),e._v(" "),a("h3",{attrs:{id:"_20、exist-in的合理利用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20、exist-in的合理利用"}},[e._v("#")]),e._v(" 20、exist & in的合理利用")]),e._v(" "),a("p",[e._v("假设表A表示某企业的员工表，表B表示部门表，查询所有部门的所有员工，很容易有以下SQL:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from A where deptId in (select deptId from B);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("这样写等价于：")]),e._v(" "),a("blockquote",[a("p",[e._v("先查询部门表B")]),e._v(" "),a("p",[e._v("select deptId from B")]),e._v(" "),a("p",[e._v("再由部门deptId，查询A的员工")]),e._v(" "),a("p",[e._v("select * from A where A.deptId = B.deptId")])]),e._v(" "),a("p",[e._v("可以抽象成这样的一个循环：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("   List<> resultSet ;\n    for(int i=0;i<B.length;i++) {\n          for(int j=0;j<A.length;j++) {\n          if(A[i].id==B[j].id) {\n             resultSet.add(A[i]);\n             break;\n          }\n       }\n    }\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("显然，除了使用in，我们也可以用exists实现一样的查询功能，如下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from A where exists (select 1 from B where A.deptId = B.deptId); \n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("因为exists查询的理解就是，先执行主查询，获得数据后，再放到子查询中做条件验证，根据验证结果（true或者false），来决定主查询的数据结果是否得意保留。")]),e._v(" "),a("p",[e._v("那么，这样写就等价于：")]),e._v(" "),a("blockquote",[a("p",[e._v("select * from A,先从A表做循环")]),e._v(" "),a("p",[e._v("select * from B where A.deptId = B.deptId,再从B表做循环.")])]),e._v(" "),a("p",[e._v("同理，可以抽象成这样一个循环：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("   List<> resultSet ;\n    for(int i=0;i<A.length;i++) {\n          for(int j=0;j<B.length;j++) {\n          if(A[i].deptId==B[j].deptId) {\n             resultSet.add(A[i]);\n             break;\n          }\n       }\n    }\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("数据库最费劲的就是跟程序链接释放。假设链接了两次，每次做上百万次的数据集查询，查完就走，这样就只做了两次；相反建立了上百万次链接，申请链接释放反复重复，这样系统就受不了了。即mysql优化原则，就是小表驱动大表，小的数据集驱动大的数据集，从而让性能更优。")]),e._v(" "),a("p",[e._v("因此，我们要选择最外层循环小的，也就是，如果"),a("strong",[e._v("B的数据量小于A，适合使用in，如果B的数据量大于A，即适合选择exist")]),e._v("。")]),e._v(" "),a("h3",{attrs:{id:"_21、尽量用-union-all-替换-union"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21、尽量用-union-all-替换-union"}},[e._v("#")]),e._v(" 21、尽量用 union all 替换 union")]),e._v(" "),a("p",[e._v("如果检索结果中不会有重复的记录，推荐union all 替换 union。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from user where userid=1 \nunion  \nselect * from user where age = 10\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from user where userid=1 \nunion all  \nselect * from user where age = 10\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("如果使用union，不管检索结果有没有重复，都会尝试进行合并，然后在输出最终结果前进行排序。如果已知检索结果没有重复记录，使用union all 代替union，这样会提高效率。")])]),e._v(" "),a("h3",{attrs:{id:"_22、索引不宜太多，一般5个以内。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22、索引不宜太多，一般5个以内。"}},[e._v("#")]),e._v(" 22、索引不宜太多，一般5个以内。")]),e._v(" "),a("ul",[a("li",[e._v("索引并不是越多越好，索引虽然提高了查询的效率，但是也降低了插入和更新的效率。")]),e._v(" "),a("li",[e._v("insert或update时有可能会重建索引，所以建索引需要慎重考虑，视具体情况来定。")]),e._v(" "),a("li",[e._v("一个表的索引数最好不要超过5个，若太多需要考虑一些索引是否没有存在的必要。")])]),e._v(" "),a("h3",{attrs:{id:"_23、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型"}},[e._v("#")]),e._v(" 23、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("king_id` varchar（20） NOT NULL COMMENT '守护者Id'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("`king_id` int(11) NOT NULL COMMENT '守护者Id'`\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("相对于数字型字段，字符型会降低查询和连接的性能，并会增加存储开销。")])]),e._v(" "),a("h3",{attrs:{id:"_24、索引不适合建在有大量重复数据的字段上，如性别这类型数据库字段。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24、索引不适合建在有大量重复数据的字段上，如性别这类型数据库字段。"}},[e._v("#")]),e._v(" 24、索引不适合建在有大量重复数据的字段上，如性别这类型数据库字段。")]),e._v(" "),a("p",[e._v("因为SQL优化器是根据表中数据量来进行查询优化的，如果索引列有大量重复数据，Mysql查询优化器推算发现不走索引的成本更低，很可能就放弃索引了。")]),e._v(" "),a("h3",{attrs:{id:"_25、尽量避免向客户端返回过多数据量。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25、尽量避免向客户端返回过多数据量。"}},[e._v("#")]),e._v(" 25、尽量避免向客户端返回过多数据量。")]),e._v(" "),a("p",[e._v("假设业务需求是，用户请求查看自己最近一年观看过的直播数据。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//一次性查询所有数据回来\nselect * from LivingInfo where watchId =useId and watchTime >= Date_sub(now(),Interval 1 Y)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//分页查询\nselect * from LivingInfo where watchId =useId and watchTime>= Date_sub(now(),Interval 1 Y) limit offset，pageSize\n\n//如果是前端分页，可以先查询前两百条记录，因为一般用户应该也不会往下翻太多页，\nselect * from LivingInfo where watchId =useId and watchTime>= Date_sub(now(),Interval 1 Y) limit 200 ;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h3",{attrs:{id:"_26、当在sql语句中连接多个表时-请使用表的别名，并把别名前缀于每一列上，这样语义更加清晰。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26、当在sql语句中连接多个表时-请使用表的别名，并把别名前缀于每一列上，这样语义更加清晰。"}},[e._v("#")]),e._v(" 26、当在SQL语句中连接多个表时,请使用表的别名，并把别名前缀于每一列上，这样语义更加清晰。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select  * from A inner\njoin B on A.deptId = B.deptId;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select  memeber.name,deptment.deptName from A member inner\njoin B deptment on member.deptId = deptment.deptId;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"_27、尽可能使用varchar-nvarchar-代替-char-nchar。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27、尽可能使用varchar-nvarchar-代替-char-nchar。"}},[e._v("#")]),e._v(" 27、尽可能使用varchar/nvarchar 代替 char/nchar。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  `deptName` char(100) DEFAULT NULL COMMENT '部门名称'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  `deptName` varchar(100) DEFAULT NULL COMMENT '部门名称'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("理由：")]),e._v(" "),a("ul",[a("li",[e._v("因为首先变长字段存储空间小，可以节省存储空间。")]),e._v(" "),a("li",[e._v("其次对于查询来说，在一个相对较小的字段内搜索，效率更高。")])]),e._v(" "),a("h3",{attrs:{id:"_28、为了提高group-by-语句的效率，可以在执行到该语句前，把不需要的记录过滤掉。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28、为了提高group-by-语句的效率，可以在执行到该语句前，把不需要的记录过滤掉。"}},[e._v("#")]),e._v(" 28、为了提高group by 语句的效率，可以在执行到该语句前，把不需要的记录过滤掉。")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select job，avg（salary） from employee  group by job having job ='president' \nor job = 'managent'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select job，avg（salary） from employee where job ='president' \nor job = 'managent' group by job；\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"_29、如何字段类型是字符串，where时一定用引号括起来，否则索引失效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29、如何字段类型是字符串，where时一定用引号括起来，否则索引失效"}},[e._v("#")]),e._v(" 29、如何字段类型是字符串，where时一定用引号括起来，否则索引失效")]),e._v(" "),a("p",[e._v("反例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from user where userid =123;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fd45766e57cdc?w=1280&h=279&f=png&s=119169",alt:""}}),e._v("\n正例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from user where userid ='123';\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fd46de786dce3?w=1280&h=296&f=png&s=135401",alt:""}}),e._v("\n理由：")]),e._v(" "),a("ul",[a("li",[e._v("为什么第一条语句未加单引号就不走索引了呢？ 这是因为不加单引号时，是字符串跟数字的比较，它们类型不匹配，MySQL会做隐式的类型转换，把它们转换为浮点数再做比较。")])]),e._v(" "),a("h3",{attrs:{id:"_30、使用explain-分析你sql的计划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_30、使用explain-分析你sql的计划"}},[e._v("#")]),e._v(" 30、使用explain 分析你SQL的计划")]),e._v(" "),a("p",[e._v("日常开发写SQL的时候，尽量养成一个习惯吧。用explain分析一下你写的SQL，尤其是走不走索引这一块。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("explain select * from user where userid =10086 or age =18;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/21/170fd29c57512897?w=1140&h=188&f=png&s=22140",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"参考与感谢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考与感谢"}},[e._v("#")]),e._v(" 参考与感谢")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000014509559",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mysql优化原则_小表驱动大表IN和EXISTS的合理利用"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/knowledgesea/p/3686105.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("sql语句的优化分析"),a("OutboundLink")],1)])]),e._v(" "),a("h3",{attrs:{id:"个人公众号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#个人公众号"}},[e._v("#")]),e._v(" 个人公众号")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/7/28/16c381c89b127bbb?w=344&h=344&f=jpeg&s=8943",alt:""}})]),e._v(" "),a("ul",[a("li",[e._v("觉得写得好的小伙伴给个点赞+关注啦，谢谢~")]),e._v(" "),a("li",[e._v("如果有写得不正确的地方，麻烦指出，感激不尽。")]),e._v(" "),a("li",[e._v("同时非常期待小伙伴们能够关注我公众号，后面慢慢推出更好的干货~嘻嘻")]),e._v(" "),a("li",[e._v("github地址：https://github.com/whx123/JavaHome")])])])}),[],!1,null,null,null);s.default=r.exports}}]);