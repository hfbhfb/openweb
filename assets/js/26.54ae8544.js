(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{527:function(t,s,a){t.exports=a.p+"assets/img/image-20210326013806171.94ef507b.png"},528:function(t,s,a){t.exports=a.p+"assets/img/image-20210326014043542.ca9d584c.png"},529:function(t,s,a){t.exports=a.p+"assets/img/image-20210326013301960.2557143f.png"},530:function(t,s,a){t.exports=a.p+"assets/img/image-20210326013226060.410e4338.png"},999:function(t,s,a){"use strict";a.r(s);var e=a(28),i=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"类型大小与最大对齐边界"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型大小与最大对齐边界"}},[t._v("#")]),t._v(" 类型大小与最大对齐边界")]),t._v(" "),e("ul",[e("li",[e("img",{staticStyle:{zoom:"50%"},attrs:{src:a(527),alt:"image-20210326013806171"}})]),t._v(" "),e("li",[e("p",[t._v("规则1: 取小值  内存浪费更少,提高性能")])]),t._v(" "),e("li",[e("p",[t._v("结构体的对齐方式")])]),t._v(" "),e("li",[e("img",{staticStyle:{zoom:"50%"},attrs:{src:a(528),alt:"image-20210326014043542"}})]),t._v(" "),e("li",[e("p",[t._v("规则2: 结构体整体占用字节数是,需要是类型对齐边界的倍数 "),e("code",[t._v("类型数组申请时,每一个成员都是内存边界对齐的")])])])]),t._v(" "),e("h1",{attrs:{id:"设备怎么组织内存的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设备怎么组织内存的"}},[t._v("#")]),t._v(" 设备怎么组织内存的")]),t._v(" "),e("ul",[e("li",[e("img",{staticStyle:{zoom:"50%"},attrs:{src:a(529),alt:"image-20210326013301960"}}),t._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:a(530),alt:"image-20210326013226060"}})])])])}),[],!1,null,null,null);s.default=i.exports}}]);