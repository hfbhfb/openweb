(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{801:function(t,r,e){"use strict";e.r(r);var a=e(28),c=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"crud-crud"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crud-crud"}},[t._v("#")]),t._v(" crud CRUD")]),t._v(" "),e("p",[t._v("crud是指在做计算处理时的增加(Create)、检索(Retrieve)、更新(Update)和删除(Delete)几个单词的首字母简写。crud主要被用在描述软件系统中数据库或者持久层的基本操作功能。")]),t._v(" "),e("h1",{attrs:{id:"acid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#acid"}},[t._v("#")]),t._v(" ACID")]),t._v(" "),e("p",[t._v("事务管理（ACID） mvcc\n谈到事务一般都是以下四点")]),t._v(" "),e("ul",[e("li",[t._v("原子性（Atomicity） 原子性是指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。")]),t._v(" "),e("li",[t._v("一致性（Consistency） 事务前后数据的完整性必须保持一致。")]),t._v(" "),e("li",[t._v("隔离性（Isolation） 事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离。")]),t._v(" "),e("li",[t._v("持久性（Durability） 持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响")])]),t._v(" "),e("p",[t._v("举个简单的例子理解以上四点\nmvcc : Multi version concurrency control of MySQL (mvcc) Concurrency control is achieved by saving a snapshot of data at a certain point in time")]),t._v(" "),e("p",[t._v("原子性\n针对同一个事务")])])}),[],!1,null,null,null);r.default=c.exports}}]);